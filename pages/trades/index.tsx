import React from "react";
import Head from "next/head";
import Navbar from "@/components/Navbar";
import {
  Web3Button,
  useAddress,
  useContract,
  useTransferNFT,
} from "@thirdweb-dev/react";
import { MUMBAI_DIGITIZE_ETH_ADDRESS } from "@/constant/addresses";
import Loading from "@/components/Loading";
import { GetServerSideProps } from "next";
import prisma from "@/lib/prisma";
import { Trade, TradeStatus } from "@prisma/client";
import axios from "axios";

export const getServerSideProps: GetServerSideProps = async (context) => {
  const trades = await prisma.trade.findMany();

  return {
    props: {
      trades,
    },
  };
};

export default function index({ trades }: { trades: Trade[] }) {
  const address = useAddress();

  const { contract: nftContract } = useContract(
    MUMBAI_DIGITIZE_ETH_ADDRESS,
    "edition"
  );

  const {
    mutateAsync: transferNft,
    isLoading: transferLoading,
    error: transferError,
  } = useTransferNFT(nftContract);

  return (
    <div>
      <Head>
        <title>Trades | Digitize.eth</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />

      <div
        className="container"
        style={{
          marginTop: 100,
        }}
      >
        <h1
          style={{
            fontSize: 30,
            fontWeight: "bold",
            marginLeft: 20,
          }}
        >
          Admin View
        </h1>

        <div
          className="row"
          style={{
            padding: 20,
          }}
        >
          <div className="row actionRow">
            <div className="col-sm">ID</div>
            <div className="col-sm">Description</div>
            <div className="col-sm">Status</div>
            <div className="col-sm">
              <button className="btn btn-primary" disabled>
                Accept ✅
              </button>
            </div>
            <div className="col-sm">
              <button className="btn btn-danger" disabled>
                Reject ❎
              </button>
            </div>
          </div>
          {!!trades ? (
            trades.map((trade, index) => (
              <div className="row actionRow">
                <div className="col-sm">{trade.tokenId}</div>
                <div className="col-sm">
                  {trade.tokenDescription || "No description"}
                </div>
                <div className="col-sm">
                  {trade.status === TradeStatus.CREATED
                    ? "Created"
                    : trade.status === TradeStatus.COMPLETED
                    ? "Completed"
                    : trade.status === TradeStatus.CANCELLED
                    ? "Rejected"
                    : "Unknown"}
                </div>
                <div className="col-sm">
                  <Web3Button
                    className="btn btn-primary"
                    isDisabled={
                      address !== trade.ownerUserAddress ||
                      trade.status !== TradeStatus.CREATED
                    }
                    contractAddress={MUMBAI_DIGITIZE_ETH_ADDRESS}
                    action={async () => {
                      try {
                        await transferNft({
                          tokenId: trade.tokenId,
                          to: trade.requestingUserAddress,
                          amount: 1,
                        });
                        await axios.post("/api/acceptTrade", {
                          tradeId: trade.id,
                        });
                      } catch (e) {
                        if (
                          (e as { message: string }).message.includes(
                            "insufficient balance"
                          )
                        ) {
                          alert("Insufficient balance to perform trade");
                        }
                      }
                    }}
                  >
                    Accept
                  </Web3Button>
                </div>
                <div className="col-sm">
                  <button
                    className="btn btn-danger"
                    disabled={
                      address !== trade.ownerUserAddress ||
                      trade.status !== TradeStatus.CREATED
                    }
                    onClick={async () => {
                      await axios.post("/api/rejectTrade", {
                        tradeId: trade.id,
                      });
                      window.location.reload();
                    }}
                  >
                    Reject
                  </button>
                </div>
              </div>
            )) || (
              <div>
                <p>No trades</p>
              </div>
            )
          ) : (
            <Loading />
          )}
        </div>
      </div>
    </div>
  );
}
